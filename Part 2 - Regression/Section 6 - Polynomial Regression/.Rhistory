install.packages(c('caret','data.table'))
install.packages(c('doParallel','DT','e1071','ggplot2','ggthemes','gridExtra','lubridate','mltools','plyr','dplyr','readxl','reshape2','ROCR','scales','shiny','shinydashboard','shinyjs','tidyr','xlsx','zoo','randomForest'))
install.packages(c("doParallel", "DT", "e1071", "ggplot2", "ggthemes", "gridExtra", "lubridate", "mltools", "plyr", "dplyr", "readxl", "reshape2", "ROCR", "scales", "shiny", "shinydashboard", "shinyjs", "tidyr", "xlsx", "zoo", "randomForest"))
shiny::runApp('Z:/2.B2B Pricing Solution/4. Working Folder/Codes/CheesePricingB2BSimulator - Sandbox')
library(rJava)
runApp('Z:/2.B2B Pricing Solution/4. Working Folder/Codes/CheesePricingB2BSimulator - Sandbox')
i = 1
a = c(1,2,3)
paste0(i,a)
paste0(c(i), a)
dmv_final <- read.csv("C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_dmv/dmv_Final.csv")
unique(dmv_final$SalesOrg)
class(dmv_final$SalesOrg)
dmv_final2 <- dmv_final[!dmv_final$SalesOrg==5030,]
dmv_final <- dmv_final[!dmv_final$SalesOrg==5030,]
exclude <- c('6398400','6477100','6250100','6453600','6350600','6380800','6410700','6575800','6436300','6400900','6411100','6135800','651200','6452500','230038','6395700','6446100','6575700','6132200','666948','236207','230028','230013','659329','6575500','669682','6101700','6448600','6391000','821484','659093','230016','653309','653311','653321','659722','661240','661241','653347','6100331','6100487','6100903','6100910','6100926','653348','664707','6100791','653318','653322','6100932','6100913','653314','653306','6100261','6100494','663413','293716','598227','661010','733521','653349','666302','596667','732876','746197','659732','748421','666836','734171','748102','666954','651105','734135','293723','598715','6100904','660285','587788','747459')
names(dmv_final)
dmv_final2 <- dmv_final[!dmv_final$Material %in% exclude,]
dmv_final <- dmv_final[!dmv_final$Material %in% exclude,]
dmv_Final_tillNov_forJanFeb <- dmv_final[!dmv_final$Date %in% c("12/1/2017","1/1/2018","2/1/2018","3/1/2018","4/1/2018"),]
dmv_Final_tillDec_forMar <- dmv_final[!dmv_final$Date %in% c("1/1/2018","2/1/2018","3/1/2018","4/1/2018"),]
dmv_Final_tillJan_forApr <- dmv_final[!dmv_final$Date %in% c("2/1/2018","3/1/2018","4/1/2018"),]
write.csv(dmv_Final_tillNov_forJanFeb, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillNov_forJanFeb.csv", row.names = F)
write.csv(dmv_Final_tillDec_forMar, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillDec_forMar.csv", row.names = F)
write.csv(dmv_Final_tillJan_forApr, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillJan_forApr.csv", row.names = F)
write.csv(dmv_Final, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final.csv", row.names = F)
write.csv(dmv_final, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final.csv", row.names = F)
write.csv(dmv_Final_tillJan_forApr, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillJan_forApr.csv", row.names = F)
# Tom's 6m lag validation exercise
prices <- read.csv("C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/DataForTomsComparison.csv")
train <- prices[prices$Date<201107,]
train <- prices[prices$Date<201707,]
test <- prices[prices$Date>201706,]
mod_lag6 <- lm(Caseinate_EM7_EMEA~PV_i_HCQAct_Lag6, data=train)
mod_lag6
test$pred <- predict(mod_lag6, newdata = test)
View(test)
View(prices)
View(test)
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
train <- prices[prices$Date<201707,]
test <- prices[prices$Date>201706,]
train <- prices[prices$Date<'2017-07-01',]
test <- prices[prices$Date>'2017-06-01',]
mod_lag6 <- lm(Caseinate_EM7_EMEA~PV_i_HCQAct_Lag6, data=train)
mod_lag6
test$pred <- predict(mod_lag6, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA-test$pred)/test$Caseinate_EM7_EMEA
mean(test$APE)
round(mean(test$APE)*100,2)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
round(mean(test$APE)*100,2)
round(mean(test$APE),2)
setwd("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 2 - Regression/Section 6 - Polynomial Regression/Position_Salaries.csv")
View(dataset)
dataset = dataset[2:3]
names(dataset)
lin_reg = lm(Salary~Level, data=dataset)
summary(lin_reg)
dataset$Level2 <- dataset$Level^2
poly_reg_2 = lm(Salary~Level+Level2, data=dataset)
summary(poly_reg_2)
dataset$Level3 <- dataset$Level^3
poly_reg_2 = lm(Salary~., data=dataset)
summary(poly_reg_2)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$CS.Index2 <- satellites$CS.Index^2
satellites$CS.Index3 <- satellites$CS.Index^3
mod2 = lm(satellites$SMP.Value.Imports.Index~., data=satellites)
summary(mod2)
names(satellites)
satellites$Period <- NULL
mod2 = lm(satellites$SMP.Value.Imports.Index~., data=satellites)
summary(mod2)
library(ggplot2)
names(dataset)
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red')
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(lin_reg(newdata = dataset)), color='blue')) +
ggtitle('Linear regression') +
xlab('Level') +
ylab('Salary')
lin_reg = lm(Salary~Level, data=dataset)
summary(lin_reg)
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(lin_reg(newdata = dataset)), color='blue')) +
ggtitle('Linear regression') +
xlab('Level') +
ylab('Salary')
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(lin_reg, newdata = dataset), color='blue')) +
ggtitle('Linear regression') +
xlab('Level') +
ylab('Salary')
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(lin_reg, newdata = dataset)), color='blue') +
ggtitle('Linear regression') +
xlab('Level') +
ylab('Salary')
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(poly_reg_2, newdata = dataset)), color = 'red') +
ggtitle('Polynomial regression') +
xlab("Level") +
ylab('Salary')
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(poly_reg_2, newdata = dataset)), color = 'blue') +
ggtitle('Polynomial regression') +
xlab("Level") +
ylab('Salary')
# Predicitng salary for a new employee
y_pred = predict(lin_reg, newdata = c(6.5))
# Predicitng salary for a new employee
y_pred = predict(lin_reg, newdata = 6.5)
# Predicitng salary for a new employee
y_pred = predict(lin_reg, newdata = data.frame(Level=6.5))
y_pred = predict(poly_reg_2, newdata = data.frame(Level=6.5, Level2=6.5^2, Level3=6.5^3))
y_pred = predict(poly_reg_2, newdata = data.frame(Level=6.5, Level2=6.5^2, Level3=6.5^3, Level4=6.5^4)) # 133259
dataset$Level4 <- dataset$Level^4
poly_reg_2 = lm(Salary~., data=dataset)
summary(poly_reg_2)
y_pred = predict(poly_reg_2, newdata = data.frame(Level=6.5, Level2=6.5^2, Level3=6.5^3, Level4=6.5^4)) # 133259
dataset = dataset[2:3]
library(e1071)
regressor_svr = svm(Salary~., data = dataset, type = 'eps-regression')
y_pred = predict(regressor_svr, newdata=6.5)
(y_pred = predict(regressor_svr, newdata=6.5))
regressor_svr = svm(Salary~., data = dataset, type = 'eps-regression')
(y_pred = predict(regressor_svr, newdata=6.5))
rm(list=ls())
# SUPPORT VECTOR MACHINE --------------------------------------------------
dataset = read.csv("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 2 - Regression/Section 6 - Polynomial Regression/Position_Salaries.csv")
dataset = dataset[2:3]
library(e1071)
regressor_svr = svm(Salary~., data = dataset, type = 'eps-regression')
(y_pred = predict(regressor_svr, newdata=6.5))
(y_pred = predict(regressor_svr, newdata=data.frame(Level=6.5)))
ggplot(data = dataset) + geom_point(aes(x = Level, y = Salary), color = 'red') +
geom_line(aes(x = Level, y = predict(regressor_svr, newdata = dataset)), color = 'blue') +
ggtitle('SVR regression') +
xlab("Level") +
ylab('Salary')
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$Period <- NULL
# satellites$CS.Index2 <- satellites$CS.Index^2
# satellites$CS.Index3 <- satellites$CS.Index^3
hist(satellites$SMP.Value.Imports.Index)
# satellites$CS.Index2 <- satellites$CS.Index^2
# satellites$CS.Index3 <- satellites$CS.Index^3
plot(density(satellites$SMP.Value.Imports.Index))
# satellites$CS.Index2 <- satellites$CS.Index^2
# satellites$CS.Index3 <- satellites$CS.Index^3
plot(density(satellites$SMP.Value.Imports.Index), main = "Density plot for SMP Imports index")
plot(density(log(satellites$SMP.Value.Imports.Index)), main = "Density plot for SMP Imports index")
plot(density(log(satellites$SMP.Value.Imports.Index)), main = "Density plot forlog SMP Imports index")
mod2 = lm(sgatellites$SMP.Value.Imports.Index~log(satellites$SMP.Value.Imports.Index), data=satellites)
summary(mod2)
mod2 = lm(satellites$SMP.Value.Imports.Index~log(satellites$SMP.Value.Imports.Index), data=satellites)
summary(mod2)
satellites$logSMPValImpIndex <- log(satellites$SMP.Value.Imports.Index)
mod2 = lm(logSMPValImpIndex~CS_Indexed_2000, data=satellites)
summary(mod2)
satellites$logCSIndex2000 <- log(satellites$CS_Indexed_2000)
mod2 = lm(logSMPValImpIndex~logCSIndex2000, data=satellites)
summary(mod2)
mod2 = lm(logSMPValImpIndex~CS_Indexed_2000, data=satellites)
summary(mod2)
X <- scale(satellites$CS_Indexed_2000, center = TRUE)
y <- scale(satellites$SMP.Value.Imports.Index, center = TRUE)
scale_mod <- lm(y~x)
scale_mod <- lm(y~X)
summary(mod)
summary(scale_mod)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
names(satellites)
satellites$Period <- NULL
satellites$logSMPValImpIndex <- log(satellites$SMP.Value.Imports.Index)
mod2 = lm(logSMPValImpIndex~CSIndexWithRussia, data=satellites)
summary(mod2)
mod2 = lm(logSMPValImpIndex~CSIndexWithoutRussia, data=satellites)
summary(mod2)
X <- scale(satellites$CSIndexWithoutRussia, center = TRUE)
y <- scale(satellites$SMP.Value.Imports.Index, center = TRUE)
scale_mod <- lm(y~X)
summary(scale_mod)
ggplot(data=satellites) + geom_point(aes(x=logSMPValImpIndex, y=CSIndexWithoutRussia), color = 'red') + geom_line(aes(x=logSMPValImpIndex, y=predict(mod2, newdata = satellites))) + ggtitle("SMP Imports vs CS Index (with Russia)")
ggplot(data=satellites) + geom_point(aes(y=logSMPValImpIndex, x=CSIndexWithoutRussia), color = 'red') + geom_line(aes(y=logSMPValImpIndex, x=predict(mod2, newdata = satellites))) + ggtitle("SMP Imports vs CS Index (with Russia)")
ggplot(data=satellites) + geom_point(aes(y=logSMPValImpIndex, x=CSIndexWithoutRussia), color = 'red') + geom_line(aes(y=logSMPValImpIndex, x=predict(mod2, newdata = satellites)), color='blue') + ggtitle("SMP Imports vs CS Index (with Russia)")
mod2 = lm(SMP.Value.Imports.Index~CSIndexWithoutRussia, data=satellites)
summary(mod2)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$Period <- NULL
# satellites$CS.Index2 <- satellites$CS.Index^2
# satellites$CS.Index3 <- satellites$CS.Index^3
plot(density(satellites$SMP.Value.Imports.Index), main = "Density plot for SMP Imports index")
names(satellites)
mod2 = lm(SMP.Value.Imports.Index~CS_Indexed_2000, data=satellites)
summary(mod2)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$Period <- NULL
# satellites$CS.Index2 <- satellites$CS.Index^2
# satellites$CS.Index3 <- satellites$CS.Index^3
plot(density(satellites$SMP.Value.Imports.Index), main = "Density plot for SMP Imports index")
names(satellites)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
names(satellites)
mod2 = lm(SMP_Import_Index~CS_Indexed_2000, data=satellites)
summary(mod2)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$Period <- NULL
satellites$logSMPValImpIndex <- log(satellites$SMP_Import_Index)
mod2 = lm(SMP_Import_Index~CS_Indexed_2000, data=satellites)
summary(mod2)
satellites = read.csv('C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/SatellitesModelDatav2.csv')
satellites$Period <- NULL
mod2 = lm(SMP_Import_Index~CS_Indexed_2000, data=satellites)
summary(mod2)
satellites$logSMPValImpIndex <- log(satellites$SMP_Import_Index)
mod3 = lm(logSMPValImpIndex~CS_Indexed_2000, data=satellites)
summary(mod3)
mod2 = lm(SMP_Import_Index~CS_Indexed_2000+(CS_Indexed_2000^2), data=satellites)
summary(mod2)
rm(ist=ls())
rm(list=ls())
library(readxl)
df <- read_excel(path = 'C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/Satellites_MasterFile.xlsx', sheet = 'Model')
df <- read_excel(path = 'C:/Users/sridevi.tolety/Documents/3.FC_Strategic_Pricing/4. Working Folder/Satellites/Satellites_MasterFile.xlsx', sheet = 'Model')
