install.packages(c('caret','data.table'))
install.packages(c('doParallel','DT','e1071','ggplot2','ggthemes','gridExtra','lubridate','mltools','plyr','dplyr','readxl','reshape2','ROCR','scales','shiny','shinydashboard','shinyjs','tidyr','xlsx','zoo','randomForest'))
install.packages(c("doParallel", "DT", "e1071", "ggplot2", "ggthemes", "gridExtra", "lubridate", "mltools", "plyr", "dplyr", "readxl", "reshape2", "ROCR", "scales", "shiny", "shinydashboard", "shinyjs", "tidyr", "xlsx", "zoo", "randomForest"))
shiny::runApp('Z:/2.B2B Pricing Solution/4. Working Folder/Codes/CheesePricingB2BSimulator - Sandbox')
library(rJava)
runApp('Z:/2.B2B Pricing Solution/4. Working Folder/Codes/CheesePricingB2BSimulator - Sandbox')
i = 1
a = c(1,2,3)
paste0(i,a)
paste0(c(i), a)
dmv_final <- read.csv("C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_dmv/dmv_Final.csv")
unique(dmv_final$SalesOrg)
class(dmv_final$SalesOrg)
dmv_final2 <- dmv_final[!dmv_final$SalesOrg==5030,]
dmv_final <- dmv_final[!dmv_final$SalesOrg==5030,]
exclude <- c('6398400','6477100','6250100','6453600','6350600','6380800','6410700','6575800','6436300','6400900','6411100','6135800','651200','6452500','230038','6395700','6446100','6575700','6132200','666948','236207','230028','230013','659329','6575500','669682','6101700','6448600','6391000','821484','659093','230016','653309','653311','653321','659722','661240','661241','653347','6100331','6100487','6100903','6100910','6100926','653348','664707','6100791','653318','653322','6100932','6100913','653314','653306','6100261','6100494','663413','293716','598227','661010','733521','653349','666302','596667','732876','746197','659732','748421','666836','734171','748102','666954','651105','734135','293723','598715','6100904','660285','587788','747459')
names(dmv_final)
dmv_final2 <- dmv_final[!dmv_final$Material %in% exclude,]
dmv_final <- dmv_final[!dmv_final$Material %in% exclude,]
dmv_Final_tillNov_forJanFeb <- dmv_final[!dmv_final$Date %in% c("12/1/2017","1/1/2018","2/1/2018","3/1/2018","4/1/2018"),]
dmv_Final_tillDec_forMar <- dmv_final[!dmv_final$Date %in% c("1/1/2018","2/1/2018","3/1/2018","4/1/2018"),]
dmv_Final_tillJan_forApr <- dmv_final[!dmv_final$Date %in% c("2/1/2018","3/1/2018","4/1/2018"),]
write.csv(dmv_Final_tillNov_forJanFeb, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillNov_forJanFeb.csv", row.names = F)
write.csv(dmv_Final_tillDec_forMar, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillDec_forMar.csv", row.names = F)
write.csv(dmv_Final_tillJan_forApr, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillJan_forApr.csv", row.names = F)
write.csv(dmv_Final, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final.csv", row.names = F)
write.csv(dmv_final, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final.csv", row.names = F)
write.csv(dmv_Final_tillJan_forApr, "C:/Users/sridevi.tolety/Documents/9.FC_Demand_Forecasting/4. Working Folder/3.OutputFiles/22May2018_DMV/dmv_Final_tillJan_forApr.csv", row.names = F)
# Tom's 6m lag validation exercise
prices <- read.csv("C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/DataForTomsComparison.csv")
train <- prices[prices$Date<201107,]
train <- prices[prices$Date<201707,]
test <- prices[prices$Date>201706,]
mod_lag6 <- lm(Caseinate_EM7_EMEA~PV_i_HCQAct_Lag6, data=train)
mod_lag6
test$pred <- predict(mod_lag6, newdata = test)
View(test)
View(prices)
View(test)
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
train <- prices[prices$Date<201707,]
test <- prices[prices$Date>201706,]
train <- prices[prices$Date<'2017-07-01',]
test <- prices[prices$Date>'2017-06-01',]
mod_lag6 <- lm(Caseinate_EM7_EMEA~PV_i_HCQAct_Lag6, data=train)
mod_lag6
test$pred <- predict(mod_lag6, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA-test$pred)/test$Caseinate_EM7_EMEA
mean(test$APE)
round(mean(test$APE)*100,2)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
round(mean(test$APE)*100,2)
round(mean(test$APE),2)
source('~/2.B2B Pricing Solution/4. Working Folder/Codes/CheesePricingB2BSimulator - Jun2018/Jun2018_Code.R')
setwd("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)")
# Importing the dataset
dataset = read.csv('Churn_Modelling.csv')
dataset = dataset[4:14]
# Encoding the categorical variables as factors
dataset$Geography = as.numeric(factor(dataset$Geography,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3)))
dataset$Gender = as.numeric(factor(dataset$Gender,
levels = c('Female', 'Male'),
labels = c(1, 2)))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Exited, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
training_set[-11] = scale(training_set[-11])
test_set[-11] = scale(test_set[-11])
# Fitting ANN to the Training set
# install.packages('h2o')
library(h2o)
h2o.init(nthreads = -1)
install.packages('h20')
install.packages('h2o')
# Fitting ANN to the Training set
# install.packages('h2o')
library(h2o)
h2o.init(nthreads = -1)
model = h2o.deeplearning(y = 'Exited',
training_frame = as.h2o(training_set),
activation = 'Rectifier',
hidden = c(5,5),
epochs = 100,
train_samples_per_iteration = -2)
# Predicting the Test set results
y_pred = h2o.predict(model, newdata = as.h2o(test_set[-11]))
y_pred = (y_pred > 0.5)
y_pred = as.vector(y_pred)
# Making the Confusion Matrix
cm = table(test_set[, 11], y_pred)
cm
h2o.shutdown()
400/12
