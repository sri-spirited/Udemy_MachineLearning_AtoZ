test[,paste0("Lag",i,"_Pred")] <- predict(model, newdata = test)
test[,paste0("Lag",i,"_APE")] <- abs(test[,"Caseinate_EM7_EMEA"] - test[,paste0("Lag",i,"_Pred")])/test[,"Caseinate_EM7_EMEA"]
Models[i+1, "Fold"] <- j
Models[i+1, "Lag"] <- i
Models[i+1, "Slope"] <- paste0(model$coefficients[2])
Models[i+1, "Intercept"] <- paste0(model$coefficients[1])
Models[i+1, "MAPE"] <- mean(test[[paste0("Lag",i,"_APE")]])*100
master <- rbind(Models, master)
}
}
for (j in 1:5) {
print(j)
for (i in 0:(length(Lags)-1)) {
print(i)
split <- sample.split(cas_pvi_df$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(cas_pvi_df, split==TRUE)
test <- subset(cas_pvi_df, split==FALSE)
formula <- as.formula(paste0("Caseinate_EM7_EMEA~PV_i_Lag",i))
model <- lm(formula, data = train)
test[,paste0("Lag",i,"_Pred")] <- predict(model, newdata = test)
test[,paste0("Lag",i,"_APE")] <- abs(test[,"Caseinate_EM7_EMEA"] - test[,paste0("Lag",i,"_Pred")])/test[,"Caseinate_EM7_EMEA"]
Models[i+1, "Fold"] <- j
Models[i+1, "Lag"] <- i
Models[i+1, "Slope"] <- paste0(model$coefficients[2])
Models[i+1, "Intercept"] <- paste0(model$coefficients[1])
Models[i+1, "MAPE"] <- mean(test[[paste0("Lag",i,"_APE")]])*100
master <- rbind(Models, master)
}
}
Lags <- seq(0,12,by=1)
master <- data.frame()
Models <- data.frame(matrix(ncol=5, nrow=0))
colnames(Models) <- c("Fold","Lag", "Slope", "Intercept", "MAPE")
set.seed(123)
for (j in 1:5) {
print(j)
for (i in 0:(length(Lags)-1)) {
print(i)
split <- sample.split(cas_pvi_df$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(cas_pvi_df, split==TRUE)
test <- subset(cas_pvi_df, split==FALSE)
formula <- as.formula(paste0("Caseinate_EM7_EMEA~PV_i_Lag",i))
model <- lm(formula, data = train)
test[,paste0("Lag",i,"_Pred")] <- predict(model, newdata = test)
test[,paste0("Lag",i,"_APE")] <- abs(test[,"Caseinate_EM7_EMEA"] - test[,paste0("Lag",i,"_Pred")])/test[,"Caseinate_EM7_EMEA"]
Models[i+1, "Fold"] <- j
Models[i+1, "Lag"] <- i
Models[i+1, "Slope"] <- paste0(model$coefficients[2])
Models[i+1, "Intercept"] <- paste0(model$coefficients[1])
Models[i+1, "MAPE"] <- mean(test[[paste0("Lag",i,"_APE")]])*100
master <- rbind(Models, master)
master <- unique(master)
}
}
write.csv(cas_pvi_df, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
write.csv(master, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
View(cas_pvi_df)
cas_pvi_df <- read_excel('C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/Prices.xlsx', sheet = 'CaseinateVsPViLags')
cas_pvi_df <- cas_pvi_df[, names(cas_pvi_df) %in% c("Year", "Month", "Caseinate_EM7_EMEA", "PV_i_Lag0", "PV_i_Lag1",	"PV_i_Lag2",	"PV_i_Lag3",	"PV_i_Lag4",	"PV_i_Lag5",	"PV_i_Lag6",	"PV_i_Lag7",	"PV_i_Lag8",	"PV_i_Lag9",	"PV_i_Lag10",	"PV_i_Lag11",	"PV_i_Lag12")]
Lags <- seq(0,12,by=1)
Models <- data.frame(matrix(ncol=4, nrow=0))
colnames(Models) <- c("Lag", "Slope", "Intercept", "MAPE")
for (i in 0:(length(Lags)-1)) {
print(i)
formula <- as.formula(paste0("Caseinate_EM7_EMEA~PV_i_Lag",i))
model <- lm(formula, data = cas_pvi_df)
cas_pvi_df[,paste0("Lag",i,"_Pred")] <- predict(model, newdata = cas_pvi_df)
cas_pvi_df[,paste0("Lag",i,"_APE")] <- abs(cas_pvi_df[,"Caseinate_EM7_EMEA"] - cas_pvi_df[,paste0("Lag",i,"_Pred")])/cas_pvi_df[,"Caseinate_EM7_EMEA"]
Models[i+1, "Lag"] <- i
Models[i+1, "Slope"] <- paste0(model$coefficients[2])
Models[i+1, "Intercept"] <- paste0(model$coefficients[1])
Models[i+1, "MAPE"] <- mean(cas_pvi_df[[paste0("Lag",i,"_APE")]])*100
}
write.csv(Models, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
write.csv(cas_pvi_df, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
write.csv(cas_pvi_df, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
Lags <- seq(0,12,by=1)
master <- data.frame()
Models <- data.frame(matrix(ncol=5, nrow=0))
colnames(Models) <- c("Fold","Lag", "Slope", "Intercept", "MAPE")
set.seed(123)
for (j in 1:5) {
print(j)
for (i in 0:(length(Lags)-1)) {
print(i)
split <- sample.split(cas_pvi_df$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(cas_pvi_df, split==TRUE)
test <- subset(cas_pvi_df, split==FALSE)
formula <- as.formula(paste0("Caseinate_EM7_EMEA~PV_i_Lag",i))
model <- lm(formula, data = train)
test[,paste0("Lag",i,"_Pred")] <- predict(model, newdata = test)
test[,paste0("Lag",i,"_APE")] <- abs(test[,"Caseinate_EM7_EMEA"] - test[,paste0("Lag",i,"_Pred")])/test[,"Caseinate_EM7_EMEA"]
Models[i+1, "Fold"] <- j
Models[i+1, "Lag"] <- i
Models[i+1, "Slope"] <- paste0(model$coefficients[2])
Models[i+1, "Intercept"] <- paste0(model$coefficients[1])
Models[i+1, "MAPE"] <- mean(test[[paste0("Lag",i,"_APE")]])*100
master <- rbind(Models, master)
master <- unique(master)
}
}
write.csv(master, file="C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Analyses & Insights/temp.csv")
# Caseinate with PIV lag5 and other variables -----------------------------
prices <- read_excel('C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/Prices.xlsx', sheet = 'Prices')
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
View(prices)
prices <- prices[prices$Year>2010,]
# Caseinate with PIV lag5 and other variables -----------------------------
prices <- read_excel('C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/Prices.xlsx', sheet = 'Prices')
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
prices <- prices[prices$Year>2010,]
names(prices)
# Caseinate with PIV lag5 and other variables -----------------------------
prices <- read_excel('C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/Prices.xlsx', sheet = 'Prices')
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
prices <- prices[prices$Year>2010,]
names(prices)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU-28_aggregate + SMP_Lag4,
data = prices)
# Caseinate with PIV lag5 and other variables -----------------------------
prices <- read_excel('C:/Users/sridevi.tolety/Documents/11.FC_Apollo_Caseinate/4. Working Directory/Data/Prices.xlsx', sheet = 'Prices')
prices$Date <- paste0("01-",prices$Month,"-",prices$Year)
prices$Date <- as.Date(prices$Date, "%d-%m-%Y")
prices <- prices[prices$Year>2010,]
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU-28_aggregate + SMP_Lag4,
data = prices)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU-28_aggregate + SMP_Lag4, data = prices)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
caseinate_mod
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + SMP_Lag4, data = prices)
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
summary(caseinate_mod)
names(prices)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4 + SMP_Lag4, data = prices)
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4 + SMP_Lag6, data = prices)
summary(caseinate_mod)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
kfold <-data.frame()
library(caTools)
i=1
set.seed(i)
splitindex <- sample.split(prices$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(prices, splitindex==TRUE)
test <- subset(prices, splitindex==FALSE)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
kfold[,"Fold"] <- i
mod1$coefficients
kfold <-data.frame(matrix, nrow=5, ncol=8)
kfold <-data.frame(matrix(nrow=5, ncol=8))
names(kfold) <- c("Fold", "Intercept", "PVi_Lag5", "NZ_Milk_Prod",
"Ireland_Milk_Prod", "EU_28_Agg", "SMP_Lag4", "MAPE")
kfold[,"Fold"] <- i
View(kfold)
model$coefficients[1]
model1$coefficients[1]
mod1$coefficients[1]
kfold[,"Intercept"] <- mod1$coefficients[1]
mod1$coefficients[2]
mod1$coefficients[1]
mod1$coefficients[3]
mod1$coefficients[6]
test$Pred <- predict(mod1, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA - test$Pred)/test$Caseinate_EM7_EMEA
kfold[,"MAPE"] <- mean(test$APE)
library(caTools)
kfold <-data.frame(matrix(nrow=5, ncol=8))
names(kfold) <- c("Fold", "Intercept", "PVi_Lag5", "NZ_Milk_Prod",
"Ireland_Milk_Prod", "EU_28_Agg", "SMP_Lag4", "MAPE")
for (i in 1:5) {
set.seed(i)
splitindex <- sample.split(prices$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(prices, splitindex==TRUE)
test <- subset(prices, splitindex==FALSE)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$Pred <- predict(mod1, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA - test$Pred)/test$Caseinate_EM7_EMEA
kfold[i,"Fold"] <- i
kfold[i,"Intercept"] <- mod1$coefficients[1]
kfold[i,"PVi_Lag5"] <- mod1$coefficients[2]
kfold[i,"NZ_Milk_Prod"] <- mod1$coefficients[3]
kfold[i,"Ireland_Milk_Prod"] <- mod1$coefficients[4]
kfold[i,"EU_28_Agg"] <- mod1$coefficients[5]
kfold[i,"SMP_Lag4"] <- mod1$coefficients[6]
kfold[i,"MAPE"] <- mean(test$APE)
}
kfold <-data.frame(matrix(nrow=5, ncol=8))
names(kfold) <- c("Fold", "Intercept", "PVi_Lag5", "NZ_Milk_Prod",
"Ireland_Milk_Prod", "EU_28_Agg", "SMP_Lag4", "MAPE")
for (i in 1:3) {
set.seed(i)
splitindex <- sample.split(prices$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(prices, splitindex==TRUE)
test <- subset(prices, splitindex==FALSE)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$Pred <- predict(mod1, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA - test$Pred)/test$Caseinate_EM7_EMEA
kfold[i,"Fold"] <- i
kfold[i,"Intercept"] <- mod1$coefficients[1]
kfold[i,"PVi_Lag5"] <- mod1$coefficients[2]
kfold[i,"NZ_Milk_Prod"] <- mod1$coefficients[3]
kfold[i,"Ireland_Milk_Prod"] <- mod1$coefficients[4]
kfold[i,"EU_28_Agg"] <- mod1$coefficients[5]
kfold[i,"SMP_Lag4"] <- mod1$coefficients[6]
kfold[i,"MAPE"] <- mean(test$APE)
}
summary(mod1)
View(test)
View(prices)
prices <- prices[prices$Year>2010,]
View(prices)
price
prices <- subset(prices, !is.na(prices$Year))
library(caTools)
kfold <-data.frame(matrix(nrow=5, ncol=8))
names(kfold) <- c("Fold", "Intercept", "PVi_Lag5", "NZ_Milk_Prod",
"Ireland_Milk_Prod", "EU_28_Agg", "SMP_Lag4", "MAPE")
for (i in 1:3) {
set.seed(i)
splitindex <- sample.split(prices$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(prices, splitindex==TRUE)
test <- subset(prices, splitindex==FALSE)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$Pred <- predict(mod1, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA - test$Pred)/test$Caseinate_EM7_EMEA
kfold[i,"Fold"] <- i
kfold[i,"Intercept"] <- mod1$coefficients[1]
kfold[i,"PVi_Lag5"] <- mod1$coefficients[2]
kfold[i,"NZ_Milk_Prod"] <- mod1$coefficients[3]
kfold[i,"Ireland_Milk_Prod"] <- mod1$coefficients[4]
kfold[i,"EU_28_Agg"] <- mod1$coefficients[5]
kfold[i,"SMP_Lag4"] <- mod1$coefficients[6]
kfold[i,"MAPE"] <- mean(test$APE)
}
kfold <-data.frame(matrix(nrow=5, ncol=8))
names(kfold) <- c("Fold", "Intercept", "PVi_Lag5", "NZ_Milk_Prod",
"Ireland_Milk_Prod", "EU_28_Agg", "SMP_Lag4", "MAPE")
for (i in 1:5) {
set.seed(i)
splitindex <- sample.split(prices$Caseinate_EM7_EMEA, SplitRatio = 0.8)
train <- subset(prices, splitindex==TRUE)
test <- subset(prices, splitindex==FALSE)
mod1 <- lm(Caseinate_EM7_EMEA~PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$Pred <- predict(mod1, newdata = test)
test$APE <- abs(test$Caseinate_EM7_EMEA - test$Pred)/test$Caseinate_EM7_EMEA
kfold[i,"Fold"] <- i
kfold[i,"Intercept"] <- mod1$coefficients[1]
kfold[i,"PVi_Lag5"] <- mod1$coefficients[2]
kfold[i,"NZ_Milk_Prod"] <- mod1$coefficients[3]
kfold[i,"Ireland_Milk_Prod"] <- mod1$coefficients[4]
kfold[i,"EU_28_Agg"] <- mod1$coefficients[5]
kfold[i,"SMP_Lag4"] <- mod1$coefficients[6]
kfold[i,"MAPE"] <- mean(test$APE)
}
getwd()
write.csv(test, file='temp.csv'
)
write.csv(kfold, file='temp.csv')
View(prices)
caseinate_mod <- lm(Caseinate_EM7_EMEA ~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = prices)
summary(caseinate_mod)
prices_df <- prices_df[, names(cas_pvi_df) %in% c("Year", "Month", "Caseinate_EM7_EMEA", "PV_i_Lag5",	"NZ_Milk_Prodn", "Ireland_Milk_Prodn", "EU_28_aggregate", "SMP_Lag4")]
prices_df <- prices
prices_df <- prices_df[, names(cas_pvi_df) %in% c("Year", "Month", "Caseinate_EM7_EMEA", "PV_i_Lag5",	"NZ_Milk_Prodn", "Ireland_Milk_Prodn", "EU_28_aggregate", "SMP_Lag4")]
prices_df$Preds <- predict(caseinate_mod, newdata = prices_df)
prices_df$APE <- abs(prices_df$Caseinate_EM7_EMEA - prices_df$Preds)/prices_df$Caseinate_EM7_EMEA
prices_df$APE <- abs(prices_df$Caseinate_EM7_EMEA - prices_df$Preds)/prices_df$Caseinate_EM7_EMEA
View(prices_df)
prices_df$APE <- round(abs(prices_df$Caseinate_EM7_EMEA - prices_df$Preds)/prices_df$Caseinate_EM7_EMEA, 2)
prices_df$APE <- round(abs(prices_df$Caseinate_EM7_EMEA - prices_df$Preds)/prices_df$Caseinate_EM7_EMEA, 5)
write.csv(prices_df, file = 'temp.csv')
write.csv(prices_df, file = 'temp.csv')
names(prices)
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
i='2017-07-01'
print(i)
train <- prices[prices$Date<i,]
View(train)
test <- prices[prices$Date>=i,]
test <- test[1,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
View(test_summary)
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master_ <- data.frame()
#One month ahead forecasts
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[1,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test)
}
vIEW(MASTER)
View(master)
write.csv(master, file='temp.csv')
getwd()
View(master)
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master_ <- data.frame()
#One month ahead forecasts
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[1,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master_ <- data.frame()
master <- data.frame()
#One month ahead forecasts
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[1,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
write.csv(master, file = 'temp.csv', row.names = F)
dateList <-  c('2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
i='2017-06-01'
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[1,]
View(test)
test <- test[2,]
test <- prices[prices$Date>=i,]
test <- test[2,]
dateList <-  c('2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[2,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
write.csv(master, file = 'temp.csv', row.names = F)
dateList <-  c('2017-05-01','2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
i="2017-06-01"
train <- prices[prices$Date<i,]
i="2017-05-01"
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[3,]
dateList <-  c('2017-05-01','2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[3,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
write.csv(master, file = 'temp.csv', row.names = F)
dateList <-  c('2017-04-01','2017-05-01','2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
i='2017-04-01'
train <- prices[prices$Date<i,]
test <- test[4,]
test <- prices[prices$Date>=i,]
test <- test[4,]
dateList <-  c('2017-04-01','2017-05-01','2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[4,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
write.csv(master, file = 'temp.csv', row.names = F)
dateList <-  c('2017-03-01','2017-04-01','2017-05-01','2017-06-01','2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
master <- data.frame()
for (i in dateList) {
print(i)
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[5,]
mod_1m_ahead <- lm(Caseinate_EM7_EMEA~ PV_i_Lag5 + NZ_Milk_Prodn + Ireland_Milk_Prodn + EU_28_aggregate + SMP_Lag4, data = train)
test$pred <- predict(mod_1m_ahead, newdata = test)
test$APE <- round(abs(test$Caseinate_EM7_EMEA-test$pred)*100/test$Caseinate_EM7_EMEA,2)
test_summary <- test[,c("Date", "Caseinate_EM7_EMEA", "pred", "APE")]
master <- rbind(master, test_summary)
}
write.csv(master, file = 'temp.csv', row.names = F)
dateList <-  c('2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01','2017-12-01','2018-01-01','2018-02-01','2018-03-01','2018-04-01')
i='2017-07-01'
master <- data.frame()
train <- prices[prices$Date<i,]
test <- prices[prices$Date>=i,]
test <- test[1,]
dataset = read.csv('Mass_Customers.csv')
setwd("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 4 - Clustering/Section 24 - K-Means Clustering")
dataset = read.csv('Mass_Customers.csv')
dataset = read.csv('Mall_Customers.csv')
X = dataset[4,5]
#Using the elbow method to find the optimal number of clusters
set.seed(6)
wcss <- vector()
plot(1:10, wcss, type='b', main=paste('Clusters of clients'), xlab='Number of clusters', ylab='WCSS')
wcss <- vector()
for (i in 1:10) {
wcss[i] <- sum(kmeans(x = X, centers = i)$withinss)
}
for (i in 1:10) wcss[i] <- sum(kmeans(x = X, centers = i)$withinss)
kmeans(X, 1)
k <- kmeans(X, 1)
k$withinss
X = dataset[,c(4,5)]
View(X)
k <- kmeans(X, 1)
k$withinss
k <- kmeans(X, 2)
k$withinss
wcss[i] <- sum(k$withinss)
#Using the elbow method to find the optimal number of clusters
set.seed(6)
wcss <- vector()
for (i in 1:10){
k <- kmeans(X, i)
wcss[i] <- sum(k$withinss)
}
plot(1:10, wcss, type='b', main=paste('Clusters of clients'), xlab='Number of clusters', ylab='WCSS')
# Applying kmeans to the mall dataset
set.seed(29)
km <- kmeans(X, 5, iter.max = 300)
#Visualizing the clusters
library(cluster)
clusplot(X, km$cluster, shade = TRUE, color = TRUE, labels = 2, plotchar = FALSE, span = TRUE, main = paste('Cluster plot'), xlab='Annual income', ylab='Spending score')
setwd("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 4 - Clustering/Section 25 - Hierarchical Clustering")
dataset <- read.csv('Mall_Customers.csv')
View(X)
View(dataset)
X = dataset[,c(4,5)]
# Using the dendogram to find optimal number of clusters
dendogram <- hclust(dist(X, method = 'euclidean'), method = 'ward.D')
plot(dendogram,
main = paste("Dendogram"),
ylab = 'Euclidean distances',
xlab = 'Customers')
# Fitting hierarchical clustering to the mall dataset
hc =hclust(dist(X, method = 'euclidean'), method = 'ward.D')
y_hc = cutree(hc, 5)
rm(list=ls())
setwd("~/StudyReferences/MachineLearning_AtoZ_Udemy/Part 5 - Association Rule Learning/Section 28 - Apriori")
# Association Rule Learning  ----------------------------------------------
dataset = read.csv('Market_Basket_Optimization.csv')
# Association Rule Learning  ----------------------------------------------
dataset = read.csv('Market_Basket_Optimisation.csv')
View(dataset)
# Association Rule Learning  ----------------------------------------------
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
View(dataset)
install.packages('arules')
# Each product : 1 column
library(arules)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep=',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN=10)
itemFrequencyPlot(dataset, topN=10)
# Training apriori on the dataset
rules = apriori(data=dataset,
parameter = list(support=(7*3/7500), confidence=0.8)) # This support sets a minimum support for at least 3 purchases a day, 7 times a wekk divided by total number of transactions
rules = apriori(data=dataset,
parameter = list(support=(7*3/7500), confidence=0.4))
# Visualizing the results
inspect(sort(rules)[1:10])
# Visualizing the results
inspect(sort(rules, by='lift')[1:10])
